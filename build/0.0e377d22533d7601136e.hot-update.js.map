{"version":3,"sources":["webpack:///./app/assets/javascripts/react_app/sources/SurveySource.jsx?d18a"],"names":[],"mappings":";;;;;;;;;;;;;;;iDAA0B,GAA0B;;;;wCACjC,GAAiB;;;;+CACD,GAAyB;;AAE5D,KAAM,gCAAgC,GAAG,SAAnC,gCAAgC,CAAI,OAAO,EAAE,MAAM,EAAK;AAC5D,OAAM,YAAY,GAAG,IAAI,CAAC;AAC1B,OAAI,YAAY,EAAE;AAChB,YAAO,gCAAQ,CAAC;IACjB,MAAM;AACL,WAAM,CAAC,qBAAqB,CAAC,CAAC;IAC/B;EACF,CAAC;;AAEF,KAAM,iCAAiC,GAAG,SAApC,iCAAiC,CAAI,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAK;AAClF,OAAM,aAAa,GAAG,IAAI,CAAC;AAC3B,OAAI,aAAa,EAAE;AACjB,8BAAO,mBAAmB,CAAC,qBAAqB,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE/E,MAAM;AACL,aAAM,CAAC,sBAAsB,CAAC,CAAC;MAChC;EACF,CAAC;;AAEF,KAAM,YAAY,GAAG,SAAf,YAAY,GAAS;;AAEzB,UAAO;AACL,gBAAW,yBAAG;AACZ,cAAO;AACL,eAAM,oBAAG;AACP,kBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,uBAAU,CAAC,YAAM;AAAC,+CAAgC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;cAAC,EAAE,GAAG,CAAC,CAAC;YAC7E,CAAC,CAAC;UACJ;AACD,cAAK,mBAAG;AACN,kBAAO,IAAI,CAAC;UACb;AACD,gBAAO,EAAE,kCAAc,qBAAqB;AAC5C,gBAAO,EAAE,kCAAc,kBAAkB;AACzC,cAAK,EAAE,kCAAc,iBAAiB;QACvC,CAAC;MACH;AACD,iBAAY,0BAAG;AACb,cAAO;AACL,eAAM,kBAAC,SAAS,EAAE,QAAQ,EAAE;AAC1B,kBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,uBAAU,CAAC,YAAI;AAAC,gDAAiC,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;cAAC,EAAE,GAAG,CAAC,CAAC;YACjG,CAAC,CAAC;UACJ;AACD,cAAK,mBAAG;AACN,kBAAO,IAAI,CAAC;UACb;AACD,gBAAO,EAAE,kCAAc,sBAAsB;AAC7C,gBAAO,EAAE,kCAAc,mBAAmB;AAC1C,cAAK,EAAE,kCAAc,kBAAkB;QACxC,CAAC;MACH;IACF,CAAC;EACH,CAAC;;sBAEa,YAAY","file":"0.0e377d22533d7601136e.hot-update.js","sourcesContent":["import SurveyActions from '../actions/SurveyActions';\nimport Logger from '../utils/Logger';\nimport {Day1Survey as Survey} from '../constants/Survey.jsx';\n\nconst resolveFetchSurveyPromiseTimeout = (resolve, reject) => {\n  const fetchSuccess = true;\n  if (fetchSuccess) {\n    resolve(Survey);\n  } else {\n    reject('Fetch survey failed');\n  }\n};\n\nconst resolveSubmitSurveyPromiseTimeout = (resolve, reject, ChatStore, surveyID) => {\n  const submitSuccess = true;\n  if (submitSuccess) {\n    Logger.LogMessageAndObject('Send user response:', ChatStore.survey[surveyID]);\n    // console.log('Send user response: ', ChatStore.survey[surveyID]);\n  } else {\n    reject('Submit survey failed');\n  }\n};\n\nconst SurveySource = () => {\n\n  return {\n    fetchSurvey() {\n      return {\n        remote() {\n          return new Promise((resolve, reject) => {\n            setTimeout(() => {resolveFetchSurveyPromiseTimeout(resolve, reject);}, 500);\n          });\n        },\n        local() {\n          return null;\n        },\n        loading: SurveyActions.fetchSurveyInProgress,\n        success: SurveyActions.fetchSurveySuccess,\n        error: SurveyActions.fetchSurveyFailed\n      };\n    },\n    submitSurvey() {\n      return {\n        remote(ChatStore, surveyID) {\n          return new Promise((resolve, reject) => {\n            setTimeout(()=>{resolveSubmitSurveyPromiseTimeout(resolve, reject, ChatStore, surveyID);}, 500);\n          });\n        },\n        local() {\n          return null;\n        },\n        loading: SurveyActions.submitSurveyInProgress,\n        success: SurveyActions.submitSurveySuccess,\n        error: SurveyActions.submitSurveyFailed\n      };\n    }\n  };\n};\n\nexport default SurveySource;\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/sources/SurveySource.jsx\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./app/assets/javascripts/react_app/components/ResponsePane.jsx?a3bf"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;kCAAkB,EAAO;;;;2CACE,GAAoB;;iDACd,GAAwB;;;;kDACvB,GAAyB;;;;uDACpB,wJAA8B;;;;0DAC3B,GAAiC;;;;KAGtD,YAAY;aAAZ,YAAY;;AACpB,YADQ,YAAY,CACnB,KAAK,EAAE;2BADA,YAAY;;AAE7B,gCAFiB,YAAY,6CAEvB,KAAK,EAAE;AACb,SAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9D;;gBAJkB,YAAY;;YAMb,4BAAC,iBAAiB,EAAE;AACpC,WAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE;AACpC,gBAAO,IAAI,CAAC;QACb;AACD,WAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE;AAC3C,iBAAQ,iBAAiB,CAAC,iBAAiB,CAAC,IAAI;AAChD,gBAAK,6BAAa,cAAc;AAC9B,oBAAO,0EAAgC,IAAI,CAAC,KAAK,CAAG,CAAC;AACvD,gBAAK,6BAAa,iBAAiB;AACjC,oBAAO,6EAAmC,IAAI,CAAC,KAAK,CAAG,CAAC;AAC1D;AACE,oBAAO;;;;cAA8B,CAAC;AAAA,UACvC;QACF,MAAM;AACL,iBAAQ,iBAAiB,CAAC,QAAQ,CAAC,IAAI;AACvC,gBAAK,6BAAa,IAAI;AACpB,oBAAO,IAAI,CAAC;AACd,gBAAK,6BAAa,QAAQ;AACxB,oBAAO,oEAA0B,IAAI,CAAC,KAAK,CAAG,CAAC;AACjD,gBAAK,6BAAa,SAAS;AACzB,oBAAO,qEAA2B,IAAI,CAAC,KAAK,CAAG,CAAC;AAClD,gBAAK,6BAAa,cAAc;AAC9B,oBAAO,0EAAgC,IAAI,CAAC,KAAK,CAAG,CAAC;AACvD,gBAAK,6BAAa,iBAAiB;AACjC,oBAAO,6EAAmC,IAAI,CAAC,KAAK,CAAG,CAAC;AAC1D;AACE,oBAAO;;;;cAA8B,CAAC;AAAA,UACvC;QACF;MAEF;;;YAEK,kBAAG;AACP,WAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;AAC7D,WAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,cAAO;;WAAK,SAAS,EAAC,cAAc;SAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,GAAE,gBAAgB;QAAO,CAAC;MAChJ;;;UA1CkB,YAAY;IAAS,mBAAM,SAAS;;sBAApC,YAAY","file":"0.460c7757b85160f20ac9.hot-update.js","sourcesContent":["import React from 'react';\nimport {ResponseType} from '../constants/Enums';\nimport UserResponseFaceMood from './UserResponseFaceMood';\nimport UserResponseTextInput from './UserResponseTextInput';\nimport UserResponseMultipleChoice from './UserResponseMultipleChoice';\nimport UserResponseMultipleSelection from './UserResponseMultipleSelection';\n\n\nexport default class ResponsePane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleResponseType = this.handleResponseType.bind(this);\n  }\n\n  handleResponseType(currentSurveyCall) {\n    if (this.props.ChatStore.botThinking) {\n      return null;\n    }\n    if (this.props.ChatStore.currentlyDrillDown) {\n      switch (currentSurveyCall.drillDownResponse.type) {\n      case ResponseType.MultipleChoice:\n        return <UserResponseMultipleChoice {...this.props}/>;\n      case ResponseType.MultipleSelection:\n        return <UserResponseMultipleSelection {...this.props}/>;\n      default:\n        return <div>Response Type Error</div>;\n      }\n    } else {\n      switch (currentSurveyCall.response.type) {\n      case ResponseType.None:\n        return null;\n      case ResponseType.FaceMood:\n        return <UserResponseFaceMood {...this.props}/>;\n      case ResponseType.TextEntry:\n        return <UserResponseTextInput {...this.props}/>;\n      case ResponseType.MultipleChoice:\n        return <UserResponseMultipleChoice {...this.props}/>;\n      case ResponseType.MultipleSelection:\n        return <UserResponseMultipleSelection {...this.props}/>;\n      default:\n        return <div>Response Type Error</div>;\n      }\n    }\n\n  }\n\n  render() {\n    const currentSurveyID = this.props.ChatStore.currentSurveyID;\n    const currentSurveyCall = this.props.ChatStore.survey[currentSurveyID];\n    return <div className='ResponsePane'>{this.props.ChatStore.surveyIsReady ? this.handleResponseType(currentSurveyCall): 'Please Wait...'}</div>;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/components/ResponsePane.jsx\n **/"],"sourceRoot":""}
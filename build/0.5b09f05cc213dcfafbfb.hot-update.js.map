{"version":3,"sources":["webpack:///./app/assets/javascripts/react_app/stores/SurveyStore.jsx?896c","webpack:///./app/assets/javascripts/react_app/sources/SurveySource.jsx?d18a","webpack:///./app/assets/javascripts/react_app/constants/Survey.jsx?4801","webpack:///./app/assets/javascripts/react_app/utils/DateFormatter.jsx?40b3"],"names":[],"mappings":"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","file":"0.5b09f05cc213dcfafbfb.hot-update.js","sourcesContent":["import alt from '../utils/Alt';\nimport SurveySource from '../sources/SurveySource';\nimport SurveyActions from '../actions/SurveyActions';\n\nclass SurveyStore {\n  constructor() {\n    this.survey = [];\n    this.bindListeners({\n      handleFetchSurveyInProgress: SurveyActions.FETCH_SURVEY_IN_PROGRESS,\n      handleFetchSurveySuccess: SurveyActions.FETCH_SURVEY_SUCCESS,\n      handleFetchingSurveyFailed: SurveyActions.FETCH_SURVEY_FAILED,\n      handleSubmitSurveyInProgress: SurveyActions.SUBMIT_SURVEY_IN_PROGRESS,\n      handleSubmitSurveyFailed: SurveyActions.SUBMIT_SURVEY_FAILED,\n      handleSubmitSurveySuccess: SurveyActions.SUBMIT_SURVEY_SUCCESS\n    });\n    this.registerAsync(SurveySource);\n  }\n\n  handleFetchSurveyInProgress() {\n    this.survey = [];\n  }\n\n  handleFetchSurveySuccess(survey) {\n    this.survey = survey;\n    this.errorMessage = null;\n    this.surveyIsReady = true;\n    \n  }\n\n  handleFetchingSurveyFailed(errorMessage) {\n    this.errorMessage = errorMessage;\n  }\n\n  handleSubmitSurveyInProgress() {\n  }\n\n  handleSubmitSurveyFailed(errorMessage) {\n    this.errorMessage = errorMessage;\n  }\n\n  handleSubmitSurveySuccess() {\n  }\n}\n\nexport default alt.createStore(SurveyStore, 'SurveyStore');\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/stores/SurveyStore.jsx\n **/","import SurveyActions from '../actions/SurveyActions';\nimport {Day1Survey as Survey} from '../constants/Survey.jsx';\n\nconst resolveFetchSurveyPromiseTimeout = (resolve, reject) => {\n\n  if (true) {\n    resolve(Survey);\n  } else {\n    reject('Fetch survey failed');\n  }\n};\n\nconst resolveSubmitSurveyPromiseTimeout = (resolve, reject, ChatStore, surveyID) => {\n  if (true) {\n    console.log('Send user response: ', ChatStore.survey[surveyID]);\n  } else {\n    reject('Submit survey failed');\n  }\n};\n\nconst SurveySource = () => {\n\n  return {\n    fetchSurvey() {\n      return {\n        remote() {\n          return new Promise((resolve, reject) => {\n            setTimeout(() => {resolveFetchSurveyPromiseTimeout(resolve, reject);}, 500);\n          });\n        },\n        local() {\n          return null;\n        },\n        loading: SurveyActions.fetchSurveyInProgress,\n        success: SurveyActions.fetchSurveySuccess,\n        error: SurveyActions.fetchSurveyFailed\n      };\n    },\n    submitSurvey() {\n      return {\n        remote(ChatStore, surveyID) {\n          return new Promise((resolve, reject) => {\n            setTimeout(()=>{resolveSubmitSurveyPromiseTimeout(resolve, reject, ChatStore, surveyID);}, 500);\n          });\n        },\n        local() {\n          return null;\n        },\n        loading: SurveyActions.submitSurveyInProgress,\n        success: SurveyActions.submitSurveySuccess,\n        error: SurveyActions.submitSurveyFailed\n      };\n    }\n  };\n};\n\nexport default SurveySource;\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/sources/SurveySource.jsx\n **/","import {CallType, DrillDownType, ResponseType, SurveyType} from './Enums';\nimport DateFormatter from '../utils/DateFormatter';\n\nconst time = new DateFormatter();\nexport const Day1Survey = [{\n  id: 0,\n  call: {\n    type: CallType.Question,\n    content: `Good morning! You\\'ve started at ${time.getTime()}.\\n**How are you feeling today?**`\n  },\n  response: {\n    type: ResponseType.FaceMood\n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 1,\n  type: SurveyType.Recovery,\n  call: {\n    type: CallType.Question,\n    content: 'Thanks for letting me know! \\n**How many hours of sleep did you get last night?**'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'More than 8',\n      '6-8 hours',\n      '4-6 hours',\n      '2-4 hours',\n      '0-2 hours'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.Negative,\n    content: 'Based on your previous data, you have been having trouble sleeping recently. Can you please tell us why?' \n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleSelection,\n    choices: [\n      'I could not breathe comfortably',\n      'I had problems falling asleep',\n      'The room temperature was not right', \n      'The room was too noisy', \n      'The bed was uncomfortable',\n      'I was not feeling well',\n      'I am feeling very stressed in this period',\n      'Other'\n    ]\n  }\n}, {\n  id: 2,\n  type: SurveyType.JobResources,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I knew exactly what was expected of me.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.Positive,\n    content: 'My supervisor(s) and I have meaningful conversations on a regular basis.' \n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  }\n}, {\n  id: 3,\n  type: SurveyType.JobDemands,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I was under time pressure to finish my tasks.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 4,\n  type: SurveyType.WorkBehaviours,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I completed my core tasks well.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [  \n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.Negative,\n    content: 'Please choose the options below that apply to you.'\n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleSelection,\n    choices: [\n      'Yesterday, the amount of tasks I had to carry out did not allow me to care about health and safety.',\n      'Yesterday, I was too fatigued to care about health and safety.'\n    ]      \n  }\n}, {\n  id: 5,\n  type: SurveyType.PersonalBehaviours,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I am confident I can carry out my core tasks well.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 6,\n  type: SurveyType.Engagement,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I am proud of the work that I do.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 7,\n  type: SurveyType.Affect,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I feel alert and awake.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 8,\n  call: {\n    type: CallType.Question,\n    content: 'Do you have **any other comments** you would like to make?'\n  },\n  response: {\n    type: ResponseType.TextEntry\n  },\n  drillDown: {\n    type: DrillDownType.None,\n    content: ''  \n  }\n}, {\n  id: 9,\n  call: {\n    type: CallType.Question,\n    content: 'Thanks for letting me know! I will see you next time!'\n  },\n  response: {\n    type: ResponseType.None\n  },\n  drillDown: {\n    type: DrillDownType.None,\n    content: ''    \n  }\n}];\n\nexport const Day2Survey = [{\n  id: 0,\n  call: {\n    type: CallType.Question,\n    content: `Good morning! You\\'ve started at ${time.getTime()}.\\n**How are you feeling today?**`\n  },\n  response: {\n    type: ResponseType.FaceMood\n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 1,\n  type: SurveyType.Recovery,\n  call: {\n    type: CallType.Question,\n    content: 'Thanks for letting me know! \\n**What was the quality of your sleep last night?**'\n  },\n  response: {\n    type: ResponseType.FaceMood,\n  },\n  drillDown: {\n    type: DrillDownType.Negative,\n    content: 'Based on your previous data, you have been having trouble sleeping recently. Can you please tell us why?' \n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleSelection,\n    choices: [\n      'I could not breathe comfortably',\n      'I had problems falling asleep',\n      'The room temperature was not right', \n      'The room was too noisy', \n      'The bed was uncomfortable',\n      'I was not feeling well',\n      'I am feeling very stressed in this period',\n      'Other'\n    ]\n  }\n}, {\n  id: 2,\n  type: SurveyType.JobResources,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I knew exactly what was expected of me.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.Positive,\n    content: 'My supervisor(s) and I have meaningful conversations on a regular basis.' \n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  }\n}, {\n  id: 3,\n  type: SurveyType.JobDemands,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I was under time pressure to finish my tasks.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 4,\n  type: SurveyType.WorkBehaviours,\n  call: {\n    type: CallType.Question,\n    content: 'Yesterday at work... I completed my core tasks well.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [  \n      'True',\n      'False'\n    ]\n  },\n  drillDown: {\n    type: DrillDownType.Negative,\n    content: 'Please choose the options below that apply to you.'\n  },\n  drillDownResponse: {\n    type: ResponseType.MultipleSelection,\n    choices: [\n      'Yesterday, the amount of tasks I had to carry out did not allow me to care about health and safety.',\n      'Yesterday, I was too fatigued to care about health and safety.'\n    ]      \n  }\n}, {\n  id: 5,\n  type: SurveyType.PersonalBehaviours,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I am confident I can carry out my core tasks well.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 6,\n  type: SurveyType.Engagement,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I am proud of the work that I do.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 7,\n  type: SurveyType.Affect,\n  call: {\n    type: CallType.Question,\n    content: 'Right now... I feel alert and awake.'\n  },\n  response: {\n    type: ResponseType.MultipleChoice,\n    choices: [\n      'True',\n      'False'\n    ]  \n  },\n  drillDown: {\n    type: DrillDownType.None\n  }\n}, {\n  id: 8,\n  call: {\n    type: CallType.Question,\n    content: 'Do you have **any other comments** you would like to make?'\n  },\n  response: {\n    type: ResponseType.TextEntry\n  },\n  drillDown: {\n    type: DrillDownType.None,\n    content: ''  \n  }\n}, {\n  id: 9,\n  call: {\n    type: CallType.Question,\n    content: 'Thanks for letting me know! I will see you next time!'\n  },\n  response: {\n    type: ResponseType.None\n  },\n  drillDown: {\n    type: DrillDownType.None,\n    content: ''    \n  }\n}];\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/constants/Survey.jsx\n **/","export default class DateFormatter {\n  constructor() {\n    this.datetime = new Date();\n  }\n\n  getDate() {\n    const date = this.datetime.getDays() + '/' + this.datetime.getMonths() + '/' + this.datetime.getYears();\n    return date;\n  }\n\n  getTime() {\n    let time = '';\n    const hours = this.datetime.getHours();\n    let minutes = this.datetime.getMinutes();\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n    \n    if (hours > 11) {\n      time = hours - 12 + ':' + minutes + 'pm';\n    } else {\n      time = hours + ':' + minutes + 'am';\n    }\n    \n    return time;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/react_app/utils/DateFormatter.jsx\n **/"],"sourceRoot":""}